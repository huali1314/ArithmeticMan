{"version":3,"sources":["rainBowGameLogic.js"],"names":["global","require","EventListener","POINTS","cc","Class","extends","Component","properties","rainPrefab","default","type","Prefab","serializable","onLoad","winSize","director","getWinSize","actionManager","getActionManager","curFillingRainBow","actionGroup","touchedColor","fillProgress","lastTime","isPause","start","self","world","find","scheduler","getScheduler","eventlistener","on","id","judgeTouchedColor","scheduleRainBow","generatorRain","idx","Math","floor","random0To1","randXOffset","width","yOffset","height","rain","instantiate","setPosition","addChild","fire","pauseAllRunningActions","isFillCompleted","rainBow","getChildByName","progressBar","getComponent","ProgressBar","progress","resumeAllAction","ActionManager","resumeTargets","schedule","rand","update","dt","date","Date","sec","getTime"],"mappings":"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","file":"rainBowGameLogic.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["var global = require(\"./global\");\nvar EventListener = require(\"./event-listener\");\nvar POINTS = [-2,-1,1,2]\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        rainPrefab: {\n            // ATTRIBUTES:\n            default: null,        // The default value will be used only when the component attaching\n                                  // to a node for the first time\n            type: cc.Prefab, // optional, default is typeof default\n            serializable: true,   // optional, default is true\n        },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.winSize = cc.director.getWinSize()\n        this.actionManager = cc.director.getActionManager()\n        this.curFillingRainBow = 1\n        this.actionGroup = null\n        this.touchedColor = \"\"\n        this.fillProgress = 0\n        this.lastTime = 0\n        this.isPause = false\n    },\n    start () {\n        var self = this\n        this.world = cc.find(\"Canvas\")\n        this.scheduler = cc.director.getScheduler()\n        global.eventlistener.on(\"judgeTouchedColor\",function(id){\n            self.judgeTouchedColor(id)\n        })\n        this.scheduleRainBow()\n    },\n    generatorRain:function(){\n        if (this.isPause == false){\n            var idx = Math.floor(cc.random0To1() * 3.5)\n            var randXOffset = POINTS[idx] * this.winSize.width/6\n            var yOffset = this.winSize.height/2 + 200\n            var rain = cc.instantiate(this.rainPrefab)\n            rain.setPosition(randXOffset,yOffset)\n            this.world.addChild(rain)\n        }\n    },\n    judgeTouchedColor:function(id){\n        if (this.curFillingRainBow == id){\n            global.eventlistener.fire(\"fillProgress\")\n        }else{\n            this.isPause = true\n            this.actionGroup = this.actionManager.pauseAllRunningActions()\n        }\n    },\n    isFillCompleted:function(id){\n        var rainBow = this.world.getChildByName(\"rainbow\" + id)\n        var progressBar = rainBow.getComponent(cc.ProgressBar)\n        if (progressBar.progress >= 1){\n            return true\n        }\n        return false\n    },\n    resumeAllAction:function(){\n        if (this.actionGroup){\n            cc.ActionManager.resumeTargets(this.actionGroup)\n        }\n    },\n    scheduleRainBow:function(){\n        var self = this\n        this.scheduler.schedule(function(){\n            var rand = Math.floor(cc.random0To1()* 6.9) + 1\n            if(self.isFillCompleted(rand)){\n                self.scheduleRainBow()\n                return\n            }\n            self.curFillingRainBow = rand\n            global.eventlistener.fire(\"runFadeAction\",rand)\n            self.scheduleRainBow()\n        },this,15,0,0,false)\n    },\n    update (dt) {\n        var date = new Date()\n        var sec = date.getTime()\n        if (sec - this.lastTime > 1000){\n            this.lastTime = sec\n            this.generatorRain()\n        }\n    },\n});\n"]}